#include <MatrixMath.h>

//#define unsigned char byte
#include "AQMath.h"
#include "FourtOrderFilter.h"
#include "Arduino.h"

#include "GlobalDefined.h"
#include "SensorsStatus.h"

#include "ADXL345.h"

#include <ITG3200.h>

#include "Device_I2C.h"
#include "Wire.h"

ADXL345  adxl345;
int* adxl345_angles;

ITG3200 itg3200;
float* itg3200_gyroRate;

//Kalman filter variables
MatrixMath matrixMath;

float A[2]; 
float x[2];
float P[2][2];
float Sw[2][2];
float Sz = 17.2;


float x_hat[2];
float Sz;              // measurement error covariance
float Sw;              // process noise covariance
float z_t;
float Inn;
float A_times_x[1];



unsigned long timer;


void setup() {

  Serial.begin(115200);
  Wire.begin();

  adxl345.initializeAccel();
  adxl345.computeAccelBias();

  itg3200.initializeGyro();
  itg3200.calibrateGyro();

  timer = millis();
  adxl345_angles = (int*) malloc(2*sizeof(int));
  itg3200_gyroRate = (float*) malloc(3*sizeof(float));
  
  float dT = 0.01;
  A[0] = 1;
  A[1] = dT;
  
  P[0][0] = 1;
  P[0][1] = 1;
  P[1][0] = 1;
  P[1][1] = 1;  
}

void loop() {

  if((millis() - timer) > 10) // 100Hz
  {
    timer = millis();
    adxl345.measureAccel();
    adxl345.calculateAngles();
    adxl345_angles = adxl345.getAccelAngles();

    itg3200.measureGyro();
    itg3200_gyroRate = itg3200.getGyroRate();

    //Serial.print("GyroRate:\t[0]");
    //Serial.print(itg3200_gyroRate[0],DEC);
    //Serial.print("\t[1]");
    //Serial.print(itg3200_gyroRate[1],DEC);
    //Serial.print("\t[2]");
    //Serial.print(itg3200_gyroRate[2],DEC);
    //Serial.println();
    x[0] = A_times_x[0];
    Serial.print("x[0]: ");
    Serial.print(x[0],DEC);
    Serial.println();  
    x[1] = itg3200_gyroRate[0];                //Z-??   AXIS
    //Serial.print("x[1]: ");
    //Serial.print(x[1],DEC);
    //Serial.println();

    //Serial.print("A*x: ");
    matrixMath.MatrixMult((float*)A, (float*)x, 1,2,1,(float*)A_times_x);
    //matrixMath.MatrixPrint((float*)A_times_x,2,1);
    

    
    //matrixMath.MatrixMult((float*)A,(float*)x,2,1,2,(float*)A_times_x);
    //matrixMath.MatrixPrint((float*)A_times_x,2,2);
    //matrixMath.MatrixMult((float*)A,(float*)x,2,2,1,(float*)A_times_x);
//    matrixMath.MatrixMult((float*)test,(float*)test2,2,2,2,(float*)test_test2);
//    matrixMath.MatrixPrint((float*)test_test2,2,2);



    /*     
     Serial.print("\tRate YZ: ");
     Serial.print(degrees(gyroRate[XAXIS]));
     Serial.print("\tRate XZ: ");
     Serial.print(degrees(gyroRate[YAXIS]));
     Serial.print("\tRate XY: ");
     Serial.print(degrees(gyroRate[ZAXIS]));
     Serial.print("\tHeading: ");
     Serial.print(degrees(gyroHeading));
     Serial.println();
     Serial.println();
     Serial.println();
     */
  }
  free(adxl345_angles);
  *adxl345_angles = NULL;
  free(itg3200_gyroRate);
  *itg3200_gyroRate = NULL;


}

